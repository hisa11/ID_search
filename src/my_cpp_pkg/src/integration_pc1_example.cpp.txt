#include "integration.hpp"
#include <rclcpp/rclcpp.hpp>
#include <iostream>
#include <thread>
#include <chrono>

int main(int argc, char *argv[])
{
    rclcpp::init(argc, argv);
    
    // 自動探索を有効にしてシステムを作成 (第4引数が true または省略で有効)
    auto system = create_integrated_system("PC1", true, 115200, true);

    std::cout << "\nPC1 高速非同期サーバー 起動。" << std::endl;
    std::cout << "バックグラウンドで自動探索を開始します..." << std::endl;

    // エグゼキューターのセットアップ
    rclcpp::executors::MultiThreadedExecutor executor(rclcpp::ExecutorOptions(), 4);
    executor.add_node(system);
    for(const auto& dev : system->getSerialDevices()) {
        executor.add_node(dev);
    }
    
    // 自動探索は IntegratedCommunicationSystem のコンストラクタ内で
    // バックグラウンドスレッドとして開始されるため、ここでの手動実行は不要です。

    // メインループ（Ctrl+Cで終了）
    executor.spin();
    
    rclcpp::shutdown();
    return 0;
}
